example: privatization

Our work is in the context of software transactional memory.
Consider a linked list (show picture).

\begin{lstlisting}
atomic {
  Node n;
  n = L.head;

  while (n.next) {
    n = n.next;
  }

  process(n);
}
\end{lstlisting}
\caption{$T_1$: process the last element inside a transaction.}
\label{lst:example_privatization-T1}
\end{subfigure}
\hfill
\begin{subfigure}{.3\textwidth}
\begin{lstlisting}
Node pL;

atomic {
  pL.head = L.head;
  L.head = NULL;
}

for (each n in PL) {
  process(n);
}
\end{lstlisting}
\caption{$T_2$: process list elements outside the transaction.}
\label{lst:example_privatization-T2}
\end{subfigure}
\hfill
\begin{subfigure}{.3\textwidth}
\begin{lstlisting}
atomic {
  Node n = L.head;
  int x = n.val;
  while (n.next) {
    if (n.next.val == x) /*@ \label{code:t3_loophead} @*/
      n.next = n.next.next;
    else
      n = n.next;
  }
}
